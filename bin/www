#!/usr/bin/env node
var app = require('../app');
var http = require('http');
var config = require('../config');
var ENV = process.env;


var port = config.APP_PORT || 7001;
var server = http.createServer(app);

ENV["NODE_ENV"] = 'prod';
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
server.timeout = 420000;//7 minutes


function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}


function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    console.log('worker listening on %d. Environment: %s', addr.port, process.env.NODE_ENV);
}


process.on('SIGINT', function () {
    console.warn("\nGracefully shutting down from SIGINT (Ctrl-C)\n");
    process.exit();
});
